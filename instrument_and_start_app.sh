#!/bin/bash

# usage : instrument_and_start.sh apk_path [Misc]
#           the default misc is x86, it can be arm64
MISC=x86
echo "-----> setting the global workspace " 

#The project folder
GLOBAL_WORKSPACE="/home/lavoisier/svn_workspace/wapet/security/fridaDroid_final_project"

#the jar file of louison giztinger instrumenter.
INSTRUMENTER_JAR_FILE=$GLOBAL_WORKSPACE/instrumenter_related_tools/groom/static/build/libs/killerdroid-static-3.0.jar 
#the instrumenter config files (the real file we will consider is main.json_template)
INSTRUMENTER_CONFIG_FILE=$GLOBAL_WORKSPACE/instrumenter_related_tools/groom/static/main.json

#The tracer js file (you can use the phone tracer or the emulator one) 
TRACER_JS=$GLOBAL_WORKSPACE/frida_related_tools/tracers/art-tracer-emulator/_agent.js
#TRACER_JS=$GLOBAL_WORKSPACE/frida_related_tools/tracers/art-tracer-phone/_agent.js
#The gadget so files folder 
GADGET_SO_FILES=$GLOBAL_WORKSPACE/frida_related_tools/gadget_so_files

#All temporary files generated by this script
TMP_FOLDER=$GLOBAL_WORKSPACE/tmp_folder 





echo "arg1 = $1"
echo "arg2 = $2"
if [ -z "$2" ] 
   then
	 
	TRACER_JS=$GLOBAL_WORKSPACE/frida_related_tools/tracers/art-tracer-emulator/_agent.js
	echo "You did not gave the second argument, we consider the default Misc $MISC, tracer = $TRACER_JS" ;
	sleep 4;
else
	 
        TRACER_JS=$GLOBAL_WORKSPACE/frida_related_tools/tracers/art-tracer-phone/_agent.js
	MISC=$2	
	echo "!!!!!we are testing on the real phone! Yes!!!! you gave the second argument \n tracer : $TRACER_JS";
	sleep 4;
fi

echo "MISC = $MISC"

if [ -z "$1" ] 
   then
	echo "No apk path supplied as argument "; exit 1;
else
        echo "testing apk $1"     
	echo "Ensure you have already started the emulator!!!"
	#adb root
	
	echo "----->  Getting the name of the apk ";   
	pkg=$(aapt dump badging $1|awk -F" " '/package/ {print $2}'|awk -F"'" '/name=/ {print $2}')
	act=$(aapt dump badging $1|awk -F" " '/launchable-activity/ {print $2}'|awk -F"'" '/name=/ {print $2}')
	echo "package name : $pkg"
	echo "start activity name : $act"

	echo "----->  Config files modification  1"; 	
	echo "----->  For the instrumenter (we configure the tmp folder where the output will be created)"
	sed "s/instrumented_folder/tmp_folder\/instrumented_apks_of_$pkg/g" ${INSTRUMENTER_CONFIG_FILE}_template  > ${TMP_FOLDER}/instrumenter_config_file.json_for_${pkg}
	
	echo "----->  Config files modification  2 "; 
	echo "----->  For Frida gadget (Finally because the config file will be inside the App Folder, nothing is done there)"
	sed "s/package_name/$pkg/g" $GLOBAL_WORKSPACE/frida_related_tools/libgadget.config.so_template > $TMP_FOLDER/libgadget.config.so_for_$pkg


        echo "----->  making the lib file : cleaning repositories "; 
	#cp -rfv $TMP_FOLDER/lib.zip ~/.local/share/Trash/files   
        rm -rfv $TMP_FOLDER/lib.zip 


	if [ "$MISC" == "x86" ]
	then
		echo "----->  Making the x86 lib folder"; 
               	mkdir $TMP_FOLDER/$MISC/

	      	#cp  -rfv  $TMP_FOLDER/$MISC/* ~/.local/share/Trash/files 
	       	rm  -rfv  $TMP_FOLDER/$MISC/*
	        
		echo "inside the lib zip file, you have the frida gadget so file, the tracer js file and the config file"
		mv -v $TMP_FOLDER/libgadget.config.so_for_$pkg $TMP_FOLDER/$MISC/libgadget.config.so
		cp -v $GADGET_SO_FILES/gadget_${MISC}.so $TMP_FOLDER/$MISC/libgadget.so
		cp -v $TRACER_JS  $TMP_FOLDER/$MISC/libtracerjs.so
                #we use .so extension because in the system, only so files are accepted in the lib folder. 
		cd $TMP_FOLDER
		zip lib.zip $MISC $MISC/*;
		cd $GLOBAL_WORKSPACE
     			
	elif [ "$MISC" == "arm64" ]
	then
		echo "----->  Making the arm64 lib folder, it is arm64-v8a in reality"; 
		mkdir $TMP_FOLDER/${MISC}-v8a/
		
	      	#cp  -rfv  $TMP_FOLDER/${MISC}-v8a/* ~/.local/share/Trash/files 
	       	rm  -rfv  $TMP_FOLDER/${MISC}-v8a/*
		
		echo "inside the lib zip file, you have the frida gadget so file, the tracer js file and the config file"
		mv -v $TMP_FOLDER/libgadget.config.so_for_$pkg $TMP_FOLDER/${MISC}-v8a/libgadget.config.so
		cp -v $GADGET_SO_FILES/gadget_${MISC}.so $TMP_FOLDER/${MISC}-v8a/libgadget.so
        	cp -v $TRACER_JS  $TMP_FOLDER/${MISC}-v8a/libtracerjs.so
                #we use .so extension because in the system, only so files are accepted in the lib folder. 
		cd $TMP_FOLDER
		zip lib.zip ${MISC}-v8a ${MISC}-v8a/*;
                cd $GLOBAL_WORKSPACE
	else
		echo "-----> ERROR : Misc not supported"; exit 1;
	fi 

	#mv lib.zip $TMP_FOLDER/


	echo  "----->  Instrumentation      "; 
	#cp -rfv  temp-* ~/.local/share/Trash/files   
	rm -rfv  temp-*


	INSTRUMENTER_OUTPUT_FOLDER=$TMP_FOLDER/instrumented_apks_of_$pkg

	#cp -rfv $TMP_FOLDER/instrumented_apks_of_* ~/.local/share/Trash/files  
        rm -rfv $TMP_FOLDER/instrumented_apks_of_*

	mkdir $INSTRUMENTER_OUTPUT_FOLDER
	
	echo "-----> the instrumented apks of this apk is $INSTRUMENTER_OUTPUT_FOLDER ,"
        echo "-----> the config file is ${TMP_FOLDER}/instrumenter_config_file.json_for_${pkg} "; 

	java -jar -Xss100M -XX:CICompilerCount=2 $INSTRUMENTER_JAR_FILE \
		       -c ${TMP_FOLDER}/instrumenter_config_file.json_for_${pkg}  \
		         -a $1

	cp -rfv  temp-*/sootOutput/*soot-frida-aligned-signed.apk $INSTRUMENTER_OUTPUT_FOLDER
	echo "----->  running the apk (The emulator need to be started)"; 
	
	adb uninstall $pkg
	repackagedApk="$(ls $INSTRUMENTER_OUTPUT_FOLDER)"
	adb install $INSTRUMENTER_OUTPUT_FOLDER/$repackagedApk
	#if act=""    
		#comp=$(adb shell cmd package resolve-activity --brief -c android.intent.category.LAUNCHER $pkg | tail -1);
        	#adb shell cmd activity start-activity $comp
        # or using monkey this is the last option. com.garbege.background.cutout
		#adb shell monkey -p com.garbege.background.cutout -c android.intent.category.LAUNCHER 1

	adb shell am start -n $pkg/$act
	spd-say done;
fi
echo " Test realised on $(date)"; 


